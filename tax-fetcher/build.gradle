apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'com.jfrog.bintray'
apply plugin: 'com.github.dcendents.android-maven'
apply plugin: 'org.jetbrains.dokka-android'
apply plugin: 'com.github.johnrengelman.shadow'

configurations {
    internalize // just define a separate configuration
}

//a task to create the relocated libs, must be defined before used below in dependencies
task internalizeJar(type: com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar) {
    classifier = 'intern'
    // this is not needed but prevents conflicts with other artifacts you may want to create
    def pkg = 'com.google.code.gson' // lib to relocate
    def shadowPrefix = 'weesner.tax-fetcher'
    relocate pkg, [shadowPrefix, pkg].join('.') // we want to relocate the above package
    configurations = [project.configurations.internalize] // our configuration from above
}

ext {
    group_Id = 'weesner.tax-fetcher'
    artifact_Id = 'tax-fetcher'
    libVersion = '1.2.4'
    codeVersion = 31

    bintrayRepo = 'maven'
    bintrayName = artifact_Id
    libraryName = artifact_Id
    publishedGroupId = group_Id
    artifact = artifact_Id
    libraryVersion = libVersion
    libraryDescription = 'A small library to fetch tax information for a given amount. Calculates Federal Income Tax, Medicare, Social Security, and Allowance cost for 2016, 2017 and 2018.'
    siteUrl = 'https://github.com/adamWeesner/Tax-Fetcher'
    gitUrl = 'https://github.com/adamWeesner/Tax-Fetcher.git'
    developerId = 'alweesner'
    developerName = 'Adam Weesner'
    developerEmail = 'alweesner@gmail.com'
    licenseName = 'The MIT License'
    licenseUrl = 'https://opensource.org/licenses/mit-license.php'
    allLicenses = ['MIT']
}

version = libVersion
group = group_Id

android {
    compileSdkVersion 28
    buildToolsVersion '28.0.3'

    defaultConfig {
        minSdkVersion 14
        targetSdkVersion 28
        versionCode codeVersion
        versionName libVersion
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
        androidTest.java.srcDirs += 'src/androidTest/kotlin'
        test {
            java.srcDirs += 'src/test/kotlin'
            resources.srcDirs += 'src/test/resources'
        }
    }
}

dokka {
    outputFormat = "html"
    outputDirectory = "$buildDir/javadoc"
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
    implementation 'com.google.code.gson:gson:2.8.5'
    implementation tasks.internalizeJar.outputs.files

    testImplementation 'junit:junit:4.12'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.1.0'
    testImplementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    testImplementation "org.jetbrains.kotlin:kotlin-test-junit:$kotlin_version"
}

if (project.rootProject.file('local.properties').exists()) {
    apply from: 'https://raw.githubusercontent.com/nuuneoi/JCenter/master/installv1.gradle'
    apply from: 'https://raw.githubusercontent.com/nuuneoi/JCenter/master/bintrayv1.gradle'
}

import com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar

task shadowJar(type: ShadowJar) {
    configurations = [project.configurations.shadow]
}
tasks.withType(JavaCompile) {
    compileTask -> compileTask.dependsOn shadowJar
}
